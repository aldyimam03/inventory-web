name: Laravel CI

on:
  push:
    branches: [ "development", "staging", "main" ]
  pull_request:
    branches: [ "development", "staging", "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:5.7.33
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: inventory_web_testing
          MYSQL_USER: laravel
          MYSQL_PASSWORD: laravel
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, mysql, pdo_mysql
        coverage: none
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: vendor
        key: composer-${{ runner.os }}-${{ hashFiles('composer.lock') }}
        restore-keys: |
          composer-${{ runner.os }}-
    
    - name: Copy environment file
      run: cp .env.example .env
    
    - name: Install Composer dependencies
      run: composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader
    
    - name: Generate application key
      run: php artisan key:generate
    
    - name: Set up testing environment
      run: |
        cp .env .env.testing
        php artisan key:generate --env=testing
    
    - name: Install NPM dependencies
      run: npm ci
    
    - name: Build frontend assets
      run: npm run build
    
    - name: Set directory permissions
      run: chmod -R 755 storage bootstrap/cache
    
    - name: Wait for MySQL to be ready
      run: |
        until mysqladmin ping -h 127.0.0.1 -P 3306 --silent; do
          echo "Waiting for MySQL..."
          sleep 2
        done
        echo "MySQL is ready!"
    
    - name: Create testing database
      run: |
        mysql -h 127.0.0.1 -P 3306 -u root -proot -e "CREATE DATABASE IF NOT EXISTS inventory_web_testing;"
        mysql -h 127.0.0.1 -P 3306 -u root -proot -e "GRANT ALL PRIVILEGES ON inventory_web_testing.* TO 'root'@'%';"
    
    - name: Run database migrations
      run: php artisan migrate --force --env=testing
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: inventory_web_testing
        DB_USERNAME: root
        DB_PASSWORD: root
    
    - name: Seed database (optional)
      run: php artisan db:seed --force --env=testing
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: inventory_web_testing
        DB_USERNAME: root
        DB_PASSWORD: root
      continue-on-error: true
    
    - name: Run tests
      run: php artisan test --env=testing
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: inventory_web_testing
        DB_USERNAME: root
        DB_PASSWORD: root
